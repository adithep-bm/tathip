#!/usr/bin/env python3
"""
üîç ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö Crawler API ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢
‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: python test_simple.py
"""

import requests
import json
import time

# ‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
BASE_URL = "http://localhost:8000/v1/crawler"
TEST_QUERIES = [
    "‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤",  # ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô
    "‡πÅ‡∏ó‡∏á‡∏´‡∏ß‡∏¢",  # ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô
    "‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏µ‡∏¨‡∏≤",  # ‡∏Ñ‡∏≥‡∏õ‡∏Å‡∏ï‡∏¥
    "casino online",  # ‡∏Ñ‡∏≥‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
]


def test_search_simple():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö API search ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢"""
    print("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö Search API...")
    print("=" * 50)

    for query in TEST_QUERIES:
        print(f"\nüìã ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: '{query}'")

        try:
            # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
            response = requests.get(
                f"{BASE_URL}/search", params={"query": query}, timeout=30
            )

            if response.status_code == 200:
                results = response.json()
                print(f"‚úÖ ‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {len(results)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

                # ‡∏´‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏á‡∏™‡∏±‡∏¢
                suspicious = [r for r in results if r.get("is_suspicious", False)]
                print(f"‚ö†Ô∏è  ‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏á‡∏™‡∏±‡∏¢: {len(suspicious)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

                # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏á‡∏™‡∏±‡∏¢
                for i, site in enumerate(suspicious[:3]):  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 3 ‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å
                    print(f"  {i+1}. {site['title'][:50]}...")
                    print(f"     URL: {site['link']}")
                    if site.get("screenshot_url"):
                        print(f"     üì∏ Screenshot: {site['screenshot_url']}")

            else:
                print(f"‚ùå Error {response.status_code}: {response.text}")

        except requests.exceptions.Timeout:
            print("‚è∞ Timeout - API ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
        except requests.exceptions.ConnectionError:
            print("üîå Connection Error - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
        except Exception as e:
            print(f"‚ùå Error: {e}")

        print("-" * 30)


def test_screenshot_simple():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö Screenshot API ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢"""
    print("\nüì∏ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö Screenshot API...")
    print("=" * 50)

    test_url = "https://www.google.com"

    try:
        print(f"üì∑ Screenshot: {test_url}")

        response = requests.post(
            f"{BASE_URL}/screenshot",
            params={"url": test_url, "title": "Google Homepage"},
            timeout=60,
        )  # Screenshot ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô

        if response.status_code == 200:
            result = response.json()
            print("‚úÖ Screenshot ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            print(f"üì∏ URL: {result.get('screenshot_url')}")
        else:
            print(f"‚ùå Error {response.status_code}: {response.text}")

    except requests.exceptions.Timeout:
        print("‚è∞ Timeout - Screenshot ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
    except requests.exceptions.ConnectionError:
        print("üîå Connection Error - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    except Exception as e:
        print(f"‚ùå Error: {e}")


def check_server():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    try:
        response = requests.get("http://localhost:8000/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà!")
            return True
        else:
            print("‚ùå Server ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á")
            return False
    except:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ server ‡πÑ‡∏î‡πâ")
        print("üí° ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: poetry run fastapi dev backend/main.py --port 8000")
        return False


if __name__ == "__main__":
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö Crawler API")
    print("=" * 50)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö server ‡∏Å‡πà‡∏≠‡∏ô
    if not check_server():
        exit(1)

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Search API
    test_search_simple()

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Screenshot API
    test_screenshot_simple()

    print("\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
    print("\nüìñ ‡∏î‡∏π‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: CRAWLER_API_GUIDE.md")
